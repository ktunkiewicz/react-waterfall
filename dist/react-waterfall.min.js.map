{"version":3,"file":"react-waterfall.min.js","sources":["../src/Components/Provider.js","../src/Components/Prevent.js","../src/helpers/connect.js","../src/helpers/subscriptions.js","../src/index.js"],"sourcesContent":["// @flow\n\nimport React, { Component } from 'react'\n\nimport type { Node } from 'react'\nimport type { CreateProvider, State } from '../types'\n\ntype Props = { children: Node, initialState: {} }\n\nconst EnhancedProvider: CreateProvider = (\n  setProvider,\n  Provider,\n  initialState,\n) =>\n  class EnhancedProvider extends Component<Props, State> {\n    constructor(props) {\n      super()\n      this.state = props.initialState || initialState\n      setProvider(this)\n    }\n\n    render() {\n      return <Provider value={this.state}>{this.props.children}</Provider>\n    }\n  }\n\nexport default EnhancedProvider\n","// @flow\n\nimport { PureComponent } from 'react'\n\nimport type { Node } from 'react'\n\ntype Props = {\n  renderComponent: ({}) => Node,\n}\n\nexport default class Prevent extends PureComponent<Props> {\n  render() {\n    const { renderComponent, ...rest } = this.props\n    return renderComponent(rest)\n  }\n}\n","// @flow\n\nimport * as React from 'react'\nimport Prevent from '../Components/Prevent'\n\nimport type { CreateConnect } from '../types'\n\nconst connect: CreateConnect = Consumer => mapStateToProps =>\n  WrappedComponent => {\n    const renderComponent = props => <WrappedComponent {...props} />\n    const ConnectedComponent = props => (\n      <Consumer>\n        {state => {\n          const filteredState = mapStateToProps(state || {})\n          return (\n            <Prevent\n              renderComponent={renderComponent}\n              {...props}\n              {...filteredState}\n            />\n          )\n        }}\n      </Consumer>\n    )\n\n    ConnectedComponent.displayName = `Connect(${WrappedComponent.displayName ||\n    WrappedComponent.name || 'Unknown'})`\n\n    return ConnectedComponent\n  }\n\nexport default connect\n","// @flow\n\nimport type { Subscription } from '../types'\n\nexport default class Subscriptions {\n  subscriptions = []\n\n  getSubscriptions = () => this.subscriptions\n\n  subscribe = (subscription: Subscription) => {\n    this.subscriptions = [...this.subscriptions, subscription]\n  }\n\n  unsubscribe = (subscription: Subscription) => {\n    this.subscriptions = this.subscriptions\n      .filter(subscriber => subscriber !== subscription)\n  }\n}\n","// @flow\n\nimport { createContext } from 'react'\n\nimport createProvider from './Components/Provider'\nimport createConnect from './helpers/connect'\nimport Subscriptions from './helpers/subscriptions'\nimport devtools from './helpers/devtools'\n\nimport type {\n  CreateStore,\n  ProviderType,\n  SetProvider,\n  CustomSetState,\n  Context,\n} from './types'\n\nconst defaultMiddlewares =\n  process.env.NODE_ENV === 'development' &&\n  typeof window !== 'undefined' &&\n  window.devToolsExtension\n    ? [devtools]\n    : []\n\nconst createStore: CreateStore = (\n  { initialState, actionsCreators = {} },\n  middlewares = [],\n) => {\n  let provider: ProviderType\n  const context: Context = createContext()\n\n  const { getSubscriptions, subscribe, unsubscribe } = new Subscriptions()\n\n  const setProvider: SetProvider = self => {\n    const initializedMiddlewares = [...middlewares, ...defaultMiddlewares]\n      .map(middleware =>\n        middleware({ initialState, actionsCreators }, self, actions))\n\n    provider = {\n      getState: () => self.state,\n      setState: (state, callback) => self.setState(state, callback),\n      initializedMiddlewares,\n    }\n  }\n\n  const setState: CustomSetState = (action, state, ...args) =>\n    new Promise(resolve => {\n      const subscriptions = getSubscriptions()\n      subscriptions.forEach(fn => fn(action, state, ...args))\n      provider.setState(state, () => {\n        provider.initializedMiddlewares.forEach(m => m(action, ...args))\n        resolve()\n      })\n    })\n\n  const actions = Object.keys(actionsCreators).reduce(\n    (r, v) => ({\n      ...r,\n      [v]: (...args) => {\n        if (!provider) {\n          // eslint-disable-next-line no-console\n          console.error('<Provider /> is not initialized yet')\n          return\n        }\n        const result = actionsCreators[v](provider.getState(), ...args)\n\n        return result.then\n          ? result.then(res => setState(v, res, ...args))\n          : setState(v, result, ...args)\n      },\n    }),\n    {},\n  )\n\n  const Provider = createProvider(setProvider, context.Provider, initialState)\n  const connect = createConnect(context.Consumer)\n\n  return {\n    Provider,\n    connect,\n    actions,\n    subscribe,\n    unsubscribe,\n  }\n}\n\nexport default createStore\n"],"names":["EnhancedProvider","setProvider","Provider","initialState","props","state","React","this","children","Component","Prevent","renderComponent","PureComponent","connect","React.createElement","WrappedComponent","ConnectedComponent","Consumer","filteredState","mapStateToProps","displayName","name","Subscriptions","_this","subscriptions","subscription","filter","subscriber","defaultMiddlewares","createStore","provider","actionsCreators","middlewares","context","createContext","getSubscriptions","subscribe","unsubscribe","setState","action","args","Promise","forEach","fn","initializedMiddlewares","m","actions","Object","keys","reduce","r","v","result","getState","then","res","error","createProvider","_toConsumableArray","map","middleware","self","callback","createConnect"],"mappings":"gsFASA,IAAMA,iBAAmC,SACvCC,EACAC,EACAC,iCAGcC,2GAELC,MAAQD,EAAMD,cAAgBA,sHAK5BG,6BAACJ,SAAgBK,KAAKF,OAAQE,KAAKH,MAAMI,gCARrBC,kBCJZC,sMAEoBH,KAAKH,aACnCO,IADCA,wFAFyBC,qBCH/BC,QAAyB,mBAAY,mBACzC,gBACQF,EAAkB,mBAASG,oBAACC,EAAqBX,IACjDY,EAAqB,mBACzBF,oBAACG,OACE,gBACOC,EAAgBC,EAAgBd,cAEpCS,oBAACJ,kCACkBC,GACbP,EACAc,gBAOKE,8BAAyBL,EAAiBK,aAC7DL,EAAiBM,MAAQ,eAElBL,KCxBUM,+IAGA,kBAAMC,EAAKC,iDAElB,SAACC,KACND,iCAAoBD,EAAKC,uBAAeC,yCAGjC,SAACA,KACRD,cAAgBD,EAAKC,cACvBE,OAAO,mBAAcC,IAAeF,OCErCG,sBAOAC,YAA2B,gBAI3BC,EAHF3B,IAAAA,iBAAc4B,gBAAAA,kBAChBC,4DAGMC,EAAmBC,wBAE4B,IAAIZ,cAAjDa,IAAAA,iBAAkBC,IAAAA,UAAWC,IAAAA,YAc/BC,EAA2B,SAACC,EAAQlC,8BAAUmC,8DAClD,IAAIC,QAAQ,YACYN,IACRO,QAAQ,mBAAMC,gBAAGJ,EAAQlC,UAAUmC,QACxCF,SAASjC,EAAO,aACduC,uBAAuBF,QAAQ,mBAAKG,gBAAEN,UAAWC,eAK1DM,EAAUC,OAAOC,KAAKjB,GAAiBkB,OAC3C,SAACC,EAAGC,2BACCD,qBACFC,EAAI,sCAAIX,gDACFV,OAKCsB,EAASrB,EAAgBoB,YAAGrB,EAASuB,mBAAeb,WAEnDY,EAAOE,KACVF,EAAOE,KAAK,mBAAOhB,gBAASa,EAAGI,UAAQf,MACvCF,gBAASa,EAAGC,UAAWZ,YAPjBgB,MAAM,+DAaLC,iBAzCgB,gBACzBb,EAAyBc,mBAAI1B,UAAgBJ,oBAChD+B,IAAI,mBACHC,qCAA8CC,EAAMf,iBAG5C,kBAAMe,EAAKxD,gBACX,SAACA,EAAOyD,UAAaD,EAAKvB,SAASjC,EAAOyD,+BAkCX7B,EAAQ/B,SAAUC,WAC/C4D,QAAc9B,EAAQhB"}
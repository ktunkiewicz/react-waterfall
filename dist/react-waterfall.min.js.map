{"version":3,"file":"react-waterfall.min.js","sources":["../src/Components/Provider.js","../src/Components/Prevent.js","../src/helpers/connect.js","../src/helpers/subscriptions.js","../src/index.js"],"sourcesContent":["// @flow\n/* eslint-disable no-undef */\n\nimport React, { Component } from 'react'\n\nimport type { CreateProvider, State } from '../types'\n\ntype Props = { children: React$Node, initialState?: {}, actionsCreators?: {} }\n\nconst EnhancedProvider: CreateProvider = (\n  setProvider,\n  Provider,\n  config,\n  subscriptions,\n  middlewares,\n) =>\n  class EnhancedProvider extends Component<Props, State> {\n    constructor(props) {\n      super()\n      this.state = props.initialState || config.initialState\n      this.setInternalState(this.state)\n      const actionsCreators = props.actionsCreators || config.actionsCreators\n      this.state.reactWaterfallActions = this.buildActions(actionsCreators)\n      this.initializedMiddlewares = middlewares.map(middleware => middleware(\n        { initialState: this.getInternalState(), actionsCreators },\n        this,\n        this.getActions(),\n      ))\n      setProvider(this)\n    }\n\n    getInternalState() {\n      return this.internalState\n    }\n\n    setInternalState(state) {\n      this.internalState = state\n    }\n\n    getActions() {\n      const { reactWaterfallActions } = this.state\n      return reactWaterfallActions\n    }\n\n    internalState = {};\n    initializedMiddlewares = [];\n\n    buildActions(actionsCreators) {\n      return Object.keys(actionsCreators).reduce(\n        (r, actionName) => ({\n          ...r,\n          [actionName]: (...args) => {\n            const result = actionsCreators[actionName](\n              this.getInternalState(),\n              this.getActions(),\n              ...args,\n            )\n            return this.handleActionResult(actionName, result, ...args)\n          },\n        }),\n        {},\n      )\n    }\n\n    handleActionResult(actionName, result, ...args) {\n      // empty or non-object response from action does nothing and returns value to caller\n      if (!result || typeof result !== 'object') return result\n      // object, but not promise, response from actions means the object is a new partial state\n      if (!result.then) this.updateState(actionName, result, ...args)\n      // promise response from action must be handled to see what it returns\n      if (result.then) {\n        result.then(promiseResult => this.handleActionResult(actionName, promiseResult, ...args))\n      }\n      return result\n    }\n\n    updateState(action, result, ...args) {\n      const newState = { ...this.state, ...result }\n      subscriptions.getSubscriptions().forEach(fn => fn(action, result, ...args))\n      this.setInternalState(newState)\n      this.initializedMiddlewares.forEach(m => m(action, newState, ...args))\n      this.setState(newState)\n    }\n\n    render() {\n      return <Provider value={this.state}>{this.props.children}</Provider>\n    }\n  }\n\nexport default EnhancedProvider\n","// @flow\n/* eslint-disable no-undef */\n\nimport { PureComponent } from 'react'\n\ntype Props = {\n  renderComponent: ({}) => React$Node,\n}\n\nexport default class Prevent extends PureComponent<Props> {\n  render() {\n    const { renderComponent, ...rest } = this.props\n    return renderComponent(rest)\n  }\n}\n","// @flow\n/* eslint-disable no-undef */\n\nimport * as React from 'react'\nimport Prevent from '../Components/Prevent'\n\nimport type { CreateConnect } from '../types'\n\nconst connect: CreateConnect = Consumer => mapStateToProps => WrappedComponent => {\n  const renderComponent = props => <WrappedComponent {...props} />\n  const ConnectedComponent = props => (\n    <Consumer>\n      {stateAndActions => {\n        if (!stateAndActions || !stateAndActions.reactWaterfallActions) {\n          const componentName = (\n            // $FlowFixMe\n            WrappedComponent.prototype &&\n            WrappedComponent.prototype.constructor &&\n            WrappedComponent.prototype.constructor.name\n          ) || null\n          const componentHint = typeof componentName === 'string' ? ` (${componentName})` : ''\n          // eslint-disable-next-line no-console,max-len\n          console.error(`Connected component${componentHint} must be wrapped with ${'<Provider />'}`)\n          return\n        }\n        const { reactWaterfallActions, ...state } = stateAndActions\n        const filteredState = mapStateToProps(state || {}, reactWaterfallActions)\n        return (\n          <Prevent\n            renderComponent={renderComponent}\n            {...props}\n            {...filteredState}\n          />\n        )\n      }}\n    </Consumer>\n  )\n\n  ConnectedComponent.displayName = `Connect(${WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'Unknown'})`\n\n  return ConnectedComponent\n}\n\nexport default connect\n","// @flow\n/* eslint-disable no-undef */\n\nimport type { Subscription } from '../types'\n\nexport default class Subscriptions {\n  subscriptions = []\n\n  getSubscriptions = () => this.subscriptions\n\n  subscribe = (subscription: Subscription) => {\n    this.subscriptions = [...this.subscriptions, subscription]\n  }\n\n  unsubscribe = (subscription: Subscription) => {\n    this.subscriptions = this.subscriptions.filter(subscriber => subscriber !== subscription)\n  }\n}\n","// @flow\n/* eslint-disable no-undef */\n\nimport { createContext } from 'react'\n\nimport createProvider from './Components/Provider'\nimport createConnect from './helpers/connect'\nimport Subscriptions from './helpers/subscriptions'\nimport devtools from './helpers/devtools'\n\nimport type {\n  CreateStore,\n  Context,\n  SetProvider,\n  ProviderType,\n} from './types'\n\nconst defaultMiddlewares =\n  process.env.NODE_ENV === 'development' &&\n  typeof window !== 'undefined' &&\n  window.devToolsExtension\n    ? [devtools]\n    : []\n\nclass Store {\n  subscriptions = new Subscriptions()\n\n  provider: ?ProviderType = null\n  setProvider: SetProvider = self => {\n    this.provider = self\n  }\n\n  create(config, middlewares) {\n    const context: Context = createContext()\n    const Provider = createProvider(\n      this.setProvider,\n      context.Provider,\n      config,\n      this.subscriptions,\n      [...middlewares, ...defaultMiddlewares],\n    )\n    const connect = createConnect(context.Consumer, this)\n    return {\n      Provider,\n      connect,\n      subscribe: this.subscriptions.subscribe,\n      unsubscribe: this.subscriptions.unsubscribe,\n    }\n  }\n}\n\n\nconst createStore: CreateStore = (config, middlewares = []) => {\n  const store = new Store()\n  return store.create(config, middlewares)\n}\n\nexport default createStore\n"],"names":["EnhancedProvider","setProvider","Provider","config","subscriptions","middlewares","props","state","initialState","setInternalState","_this","actionsCreators","reactWaterfallActions","buildActions","initializedMiddlewares","map","middleware","getInternalState","getActions","this","internalState","Object","keys","reduce","r","actionName","args","result","_this2","handleActionResult","_typeof","then","updateState","_this3","promiseResult","action","newState","getSubscriptions","forEach","fn","m","setState","React","children","Component","Prevent","renderComponent","PureComponent","connect","React.createElement","WrappedComponent","ConnectedComponent","Consumer","stateAndActions","filteredState","mapStateToProps","componentName","prototype","constructor","name","componentHint","error","displayName","Subscriptions","subscription","filter","subscriber","defaultMiddlewares","Store","provider","self","context","createContext","createProvider","createConnect","subscribe","unsubscribe","createStore","create"],"mappings":"i7FASA,IAAMA,iBAAmC,SACvCC,EACAC,EACAC,EACAC,EACAC,iCAGcC,uRAELC,MAAQD,EAAME,cAAgBL,EAAOK,eACrCC,iBAAiBC,EAAKH,WACrBI,EAAkBL,EAAMK,iBAAmBR,EAAOQ,yBACnDJ,MAAMK,sBAAwBF,EAAKG,aAAaF,KAChDG,uBAAyBT,EAAYU,IAAI,mBAAcC,gBAC1CN,EAAKO,wFAErBP,EAAKQ,8IAMAC,KAAKC,uDAGGb,QACVa,cAAgBb,8CAIaY,KAAKZ,MAA/BK,2DAOGD,qBACJU,OAAOC,KAAKX,GAAiBY,OAClC,SAACC,EAAGC,2BACCD,qBACFC,EAAa,sCAAIC,iDACVC,EAAShB,EAAgBc,YAC7BG,EAAKX,mBACLW,EAAKV,qBACFQ,WAEEE,EAAKC,4BAAmBJ,EAAYE,UAAWD,uDAO3CD,EAAYE,qCAAWD,8DAEnCC,GAA4B,WAAlBG,QAAOH,IAEjBA,EAAOI,MAAMZ,KAAKa,wBAAYP,EAAYE,UAAWD,IAEtDC,EAAOI,QACFA,KAAK,mBAAiBE,EAAKJ,4BAAmBJ,EAAYS,UAAkBR,MAE9EC,GAP2CA,sCAUxCQ,EAAQR,8BAAWD,2DACvBU,mBAAgBjB,KAAKZ,MAAUoB,KACvBU,mBAAmBC,QAAQ,mBAAMC,gBAAGJ,EAAQR,UAAWD,WAChEjB,iBAAiB2B,QACjBtB,uBAAuBwB,QAAQ,mBAAKE,gBAAEL,EAAQC,UAAaV,WAC3De,SAASL,2CAIPM,6BAACxC,SAAgBiB,KAAKZ,OAAQY,KAAKb,MAAMqC,gCArErBC,kBCPZC,sMAEoB1B,KAAKb,aACnCwC,IADCA,wFAFyBC,qBCD/BC,QAAyB,mBAAY,mBAAmB,gBACtDF,EAAkB,mBAASG,oBAACC,EAAqB5C,IACjD6C,EAAqB,mBACzBF,oBAACG,OACE,eACMC,GAAoBA,EAAgBzC,2BAYjCA,EAAoCyC,EAApCzC,sBAA0BL,2BAAU8C,6BACtCC,EAAgBC,EAAgBhD,MAAaK,UAEjDqC,oBAACJ,kCACkBC,GACbxC,EACAgD,QAjBAE,IAEaC,WACjBP,EAAiBO,UAAUC,aAC3BR,EAAiBO,UAAUC,YAAYC,MACpC,KACCC,EAAyC,iBAAlBJ,cAAkCA,OAAmB,WAE1EK,mCAA4BD,2BAAsC,6BAgB/DE,8BAAyBZ,EAAiBY,aAC3DZ,EAAiBS,MACjB,eAEKR,KCrCYY,+IAGA,kBAAMrD,EAAKN,iDAElB,SAAC4D,KACN5D,iCAAoBM,EAAKN,uBAAe4D,yCAGjC,SAACA,KACR5D,cAAgBM,EAAKN,cAAc6D,OAAO,mBAAcC,IAAeF,OCE1EG,sBAOAC,sGACY,IAAIL,+CAEM,yCACC,cACpBM,SAAWC,wDAGXnE,EAAQE,OACPkE,EAAmBC,sCACRC,iBACftD,KAAKlB,YACLsE,EAAQrE,SACRC,EACAgB,KAAKf,iCACDC,UAAgB8D,6BAENO,QAAcH,EAAQnB,SAAUjC,gBAInCA,KAAKf,cAAcuE,sBACjBxD,KAAKf,cAAcwE,sBAMhCC,YAA2B,SAAC1E,OAAQE,mEAC1B,IAAI+D,OACLU,OAAO3E,EAAQE"}